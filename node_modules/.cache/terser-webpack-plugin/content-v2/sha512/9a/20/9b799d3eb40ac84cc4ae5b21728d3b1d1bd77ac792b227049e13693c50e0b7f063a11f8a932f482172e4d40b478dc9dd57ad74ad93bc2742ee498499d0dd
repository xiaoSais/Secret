{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{156:function(e,i,s){\"use strict\";s.r(i);var t=s(0),n=Object(t.a)({},function(){var e=this,i=e.$createElement,s=e._self._c||i;return s(\"div\",{staticClass:\"content\"},[e._m(0),e._v(\" \"),e._m(1),e._v(\" \"),s(\"p\",[e._v(\"引用之前需要安装vue-awesome-swiper组件，然后像引用其他组件一样引入即可。其中swiper类似于滑动对象的容器，swiper-slide为滑动的单个item。\")]),e._v(\" \"),s(\"p\",[e._v(\"//template\\n\"),s(\"swiper\",{attrs:{options:e.swiperOptions}},e._l(e.data,function(e){return s(\"swiper-slide\")}))],1),e._v(\" \"),e._m(2),e._v(\" \"),s(\"p\",[e._v(\"//js\\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'\")]),e._v(\" \"),s(\"p\",[e._v(\"配置选项\\nVue-awosome-swipet 的Options可以配置所有的swiper配置和方法，需要在data里返回。\")]),e._v(\" \"),s(\"p\",[e._v(\"//js\\ndata() {\\nreturn {\\nswiperOptions: [\\n//基本配置和方法，\\nloopedSides: 8 //设置复制层的层数\\nonTouchMove: this.cd() //滑动时触发回调\\n]\\n}\\n}，\\nmethods: {\\ncb() {\\nconsole.log('开始滑动');\\n}\\n}\")]),e._v(\" \"),s(\"p\",[e._v(\"swiper实例\\nswiper属性和方法需要通过swiper进行访问和调用。在该组件获取swiper对象的方法如下，注意要等整个Dom加载完成才能获取，并且data里要有数据，否则就会报错。\")]),e._v(\" \"),s(\"p\",[e._v(\"//template\\n\"),s(\"swiper\",{ref:\"mySwiper\",attrs:{options:e.swiperOptions}},e._l(e.data,function(e){return s(\"swiper-slide\")}))],1),e._v(\" \"),s(\"p\",[e._v(\"//js\\ncomputed: {\\ngetSwiper() {\\nreturn this.$ref.mySwiper.swiper;\\n}\\t\\n},\\nmethods: {\\ngetIndex() {\\nreturn this.getSwiper.activeIndex; //获取swiper实例当前活动的item\\n}\\n}\")]),e._v(\" \"),s(\"p\",[e._v(\"样式调整\\n一般需要调整两个slide样式，即非活动slide和活动slide，这两个样式分别通过.swiper-slide 和.swiper-slide-active进行调整。\")]),e._v(\" \"),s(\"p\",[e._v(\"//在template里无需设置slide的class为swiper-slide，直接在style中使用即可。\\n\")]),s(\"style\",[e._v(\"\\n.swiper-slide {\\n//非活动状态下的slide样式\\n}\\n.swiper-slide-active {\\n//活动状态下的slide样式\\n}\\n\")]),e._v(\"\\n这两个样式的名字可以通过options进行设置，详见swiper文档命名空间。\"),s(\"p\"),e._v(\" \"),s(\"p\",[e._v(\"sidesPreview相关\\n这个选项代表当前视图出现的slide的个数，它有两个值。\")]),e._v(\" \"),s(\"p\",[e._v(\"data() {\\noptions: [\\nsidesPreview: 2.3 //指当前视图出现2.3的滑动slide。\\nsidesPreview: 'auto' //根据设置的slide宽度和active的slide宽度自行计算当前视图出现的slide个数。\\n]\\n}\\n注意设置固定值会使得修改active-class 无法改变active slide的宽度，所有的slide会固定宽度。但是可以通过transform来实现宽度的改变，（推荐使用这种方式）；设置‘auto你可以设置active和非active的item的宽度，但是经常出现滑动时到不了指定位置的问题，这是一个天坑。\")]),e._v(\" \"),s(\"p\",[e._v(\"边距相关\\n边距可以通过选项和css实现，spaceBetwwen代表两个slide之间的距离，最左边slide距离（active slide）容器的宽度可以通过.swiper-slide-active 设置。距离右边容器的距离通过 slidesOffsetAfter 实现。\")]),e._v(\" \"),s(\"p\",[e._v(\"//js\\ndata() {\\noptions: [\\nspaceBetween: 10 //这里的单位为px\\nspaceBetween: window.innerWidth*.25 //或者根据窗口大小动态改变\\nslidesOffsetAfter： 20 //一般需要动态调整\\n]\\n}\")]),e._v(\" \"),s(\"p\",[e._v(\"//css\\n.swiper-slide-active {\\nmargin-left: 20px; //active距离左边容器的距离，默认模式下，即没有设置active slide居中选项。\\nmargin-right: 20px; //在固定sidesPreview的情况下，设置margin-right是无效的。\\n}\")]),e._v(\" \"),s(\"p\",[e._v(\"Loop相关\\n循环模式可以通过options数组里loop属性进行设置。这个模式有三个坑。\")]),e._v(\" \"),s(\"p\",[e._v(\"该模式下会自动在第一个slide前面复制一个带有.swiper-slide-duplicate类名的复制层，该复制层是复制最后一个slide而来，同样最后一个层后面会复制第一个层形成一个新的复制层。\\n该模式下出现的复制层无法复制对应层的组件和事件。\\n复制层第一次发生Touchmove的时候会瞬变到非复制层，如果图片是懒加载的话，会出现图片重复加载的情况。\\n解决方案：\")]),e._v(\" \"),s(\"p\",[e._v(\"Loop模式下最好在options里配置 loopedSides选项，代表设置的loop层数量。一般设置为data的长度。 排列顺序为  0,1,2,0,1,2,0,1,2   其中红色代表复制层。\\n手动为复制层添加组件和事件，然后放在this.$nextTick(()=> {})中编译一下。\\n监听onSlideChange()事件，手动将相同index的图片地址赋值为相同的地址。\\n异步加载\\n异步加载的时候很容易出错，如果data没有值，swiper组件就不会初始化，获取swiper实例也会出错。解决方案也很简单。用v-if 绑定data的长度。\")]),e._v(\" \"),s(\"p\",[e._v(\"//swiperDemo.vue\\n\"),[e.data.length?s(\"div\",[s(\"swiper\",{attrs:{options:e.swiperOptions}},e._l(e.data,function(e){return s(\"swiper-slide\")}))],1):e._e()]],2),e._v(\" \"),s(\"p\",[e._v(\"//parents.vue\\n\"),e.data.length?s(\"swiper\",{attrs:{data:e.data}}):e._e()],1)])},[function(){var e=this.$createElement,i=this._self._c||e;return i(\"h2\",{attrs:{id:\"swiper组件\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#swiper组件\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" Swiper组件\")])},function(){var e=this.$createElement,i=this._self._c||e;return i(\"h3\",{attrs:{id:\"引入和基本用法\"}},[i(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#引入和基本用法\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 引入和基本用法\")])},function(){var e=this.$createElement,i=this._self._c||e;return i(\"pre\",[i(\"code\",[this._v(\"</swiper-slide>\\n\")])])}],!1,null,null,null);n.options.__file=\"swiper.md\";i.default=n.exports}}]);","extractedComments":[]}